(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{171:function(t,e,s){"use strict";s.r(e);var r=s(0),a=Object(r.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("以下步骤适用于 Windows 这边安装的 Visual Studio Code。2019 年 5 月的今天，我不仅因为 "),s("a",{attrs:{href:"https://sspai.com/post/47719",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里陈述的理由"),s("OutboundLink")],1),t._v(" 推荐 VS Code，更因为 VS Code（Insider 版本）已经通过 Remote 插件家族直接支持了 WSL 下的开发调试。一句话：如果你希望使用 WSL 作为你的主要开发环境，请直接考虑 VS Code。")])]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),s("p",[t._v("下载安装 Visual Studio Code 在这里 > "),s("a",{attrs:{href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Visual Studio Code | Code editing.\nRedefined."),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"remote-wsl-插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remote-wsl-插件","aria-hidden":"true"}},[t._v("#")]),t._v(" Remote-WSL 插件 "),s("Badge",{attrs:{text:"new",vertical:"middle"}}),s("Badge",{attrs:{text:"preview",type:"error",vertical:"middle"}})],1),t._v(" "),s("p",[t._v("前些天，VS Code 官方团队终于放出了正式的对 WSL 环境下利用 VS Code 开发的组件包：Visual Studio Code Remote - WSL，详见："),s("a",{attrs:{href:"https://code.visualstudio.com/docs/remote/wsl#_debugging-in-wsl",target:"_blank",rel:"noopener noreferrer"}},[t._v("Developing in WSL"),s("OutboundLink")],1),t._v("。")]),t._v(" "),t._m(5),t._v(" "),s("h3",{attrs:{id:"安装并启动-remote-wsl-插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装并启动-remote-wsl-插件","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装并启动 Remote-WSL 插件 "),s("Badge",{attrs:{text:"new",vertical:"middle"}})],1),t._v(" "),t._m(6),t._v(" "),s("p",[t._v("如果你在左下角选择 Remote 环境中选择了「Remote-WSL: New Window」，VS Code 会默认开启一个 Remote 环境的新窗口，之后会在其中下载必要的 VS Code Server，用来沟通 Remote 环境和本机环境。")]),t._v(" "),t._m(7),t._v(" "),s("p",[t._v("上面就是 VS Code Server 在 WSL 环境中的下载过程，之后我们 VS Code 的新窗口就处于 WSL 环境中了。")]),t._v(" "),s("h3",{attrs:{id:"在-wsl-环境中安装-vs-code-插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-wsl-环境中安装-vs-code-插件","aria-hidden":"true"}},[t._v("#")]),t._v(" 在 WSL 环境中安装 VS Code 插件 "),s("Badge",{attrs:{text:"new",vertical:"middle"}})],1),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),s("p",[t._v("以 Go 语言的开发环境插件为例子：如上图，可以看到，在 WSL 的 Remote 环境下下载的插件都主动标明了「Install on WSL」的标签。")]),t._v(" "),t._m(10),t._v(" "),s("p",[t._v("同时，如上图侧边栏中显示的已安装插件：VS Code 为我们区分了本地安装的插件，和 WSL Remote 环境下安装的插件。当然，本地安装的插件（比如配色主题和图标主题等等）我们也是可以直接使用的。")]),t._v(" "),s("h3",{attrs:{id:"打开-wsl-环境下的文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打开-wsl-环境下的文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 打开 WSL 环境下的文件 "),s("Badge",{attrs:{text:"new",vertical:"middle"}})],1),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),s("h3",{attrs:{id:"默认的-wsl-终端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#默认的-wsl-终端","aria-hidden":"true"}},[t._v("#")]),t._v(" 默认的 WSL 终端 "),s("Badge",{attrs:{text:"new",vertical:"middle"}})],1),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),s("h2",{attrs:{id:"问题（不存在了！）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题（不存在了！）","aria-hidden":"true"}},[t._v("#")]),t._v(" 问题（不存在了！）"),s("Badge",{attrs:{text:"deprecated",type:"error",vertical:"middle"}})],1),t._v(" "),t._m(18),t._v(" "),s("details",[s("p",[s("s",[t._v("目前存在的一个问题是：VSCode 和 WSL 侧的工具链兼容性都很糟糕（除了 Node.js），都需要一定的配置才能丝滑工作。这也是一个当前微软 VSCode 各大语言插件组和 WSL 开发组都知道并在解决的问题（参考 "),s("a",{attrs:{href:"https://github.com/Microsoft/vscode-python/issues/67",target:"_blank",rel:"noopener noreferrer"}},[t._v("VSCode Python 插件 Issue #67"),s("OutboundLink")],1),t._v("）。")])]),t._v(" "),s("p",[s("s",[t._v("由于 WSL 是一个 Runtime 环境，而 VSCode 只和 Windows 侧的组件进行沟通，因此当前一个比较好的解决方法是：在 Windows 侧手动创建一些脚本帮助 VSCode 和 WSL 侧安装的组件沟通。"),s("router-link",{attrs:{to:"/3-VSCode/3-3-Python.html"}},[t._v("详见 Python 配置板块。")])],1)])]),t._v(" "),s("h2",{attrs:{id:"参考配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考配置 "),s("Badge",{attrs:{text:"deprecated",type:"error",vertical:"middle"}})],1),t._v(" "),t._m(19),t._v(" "),s("details",[t._m(20),t._v(" "),s("p",[t._v("为了方便参考，我使用的 Visual Studio Code 具体配置如下：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("字体：")]),t._v(" "),s("ul",[s("li",[t._v("附带有 Cursive 的字体叫做 Operator Mono，它是一个 $200 的付费字体，需要单独购买。")]),t._v(" "),s("li",[t._v("推荐免费开源的字体 - 下载地址："),s("a",{attrs:{href:"https://github.com/be5invis/Sarasa-Gothic",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sarasa Gothic / 更纱黑体 / 更紗黑體 / 更紗ゴシック"),s("OutboundLink")],1)])])])]),t._v(" "),t._m(21),s("ul",[s("li",[s("p",[t._v("主题配色：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/wesbos/cobalt2-vscode",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cobalt2 Theme for VS Code"),s("OutboundLink")],1)])])])]),t._v(" "),t._m(22),t._m(23),t._v(" "),t._m(24)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://i.loli.net/2019/05/13/5cd96b08b7f1f38773.png",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"visual-studio-code"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#visual-studio-code","aria-hidden":"true"}},[this._v("#")]),this._v(" Visual Studio Code")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"下载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下载","aria-hidden":"true"}},[this._v("#")]),this._v(" 下载")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("请注意，在 Windows 侧安装过程中务必：")]),t._v(" "),s("ol",[s("li",[t._v("安装至 C 盘（否则会有路径与访问权限的问题）")]),t._v(" "),s("li",[t._v("在「选择其他任务」界面勾选「其他」下的全部四个选项（为了后面在 WSL 中直接调用 "),s("code",[t._v("code")]),t._v(" 命令来打开 Visual Studio Code 打下基础。）")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"danger custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("DANGER")]),this._v(" "),e("p",[this._v("在 Windows 文件夹与文件中出现的名字不能有特殊符号，包括 Emoji，否则会出现无法识别 WSL 中的 Git 路径和无法打开终端直接进入相应文件夹的问题。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("目前这个插件包只能在 VS Code Insider 版本中使用")]),this._v("，请大家期待一下正式版本的上线。接下来，如果你使用了 Insider 版本的 VS Code，下面是一些基本的「使用 Remote-WSL 插件在 WSL 下开发的」特性。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://i.loli.net/2019/05/13/5cd9614ee52a165502.png",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://i.loli.net/2019/05/13/5cd960502089983105.png",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("需要了解的重要的一点是："),e("strong",[this._v("VS Code 在 Remote 插件下的使用和在本机下的使用实际上是两个环境")]),this._v("，插件系统并不共享。因此，我们一旦开启了 WSL 的 Remote 环境，所下载的插件也都是在这个环境下才能使用的。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://i.loli.net/2019/05/13/5cd96250991ec71091.png",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://i.loli.net/2019/05/13/5cd962da8d67558603.png",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("打开文件这里应该是 Remote 环境和本地环境最不同的地方所在了。现在 WSL 下的全部文件我们都可以直接用 VS Code 打开并修改，比如曾经在 Linux 分区（以 "),e("code",[this._v("/home/spencer/")]),this._v(" 为例）在 Remote-WSL 的插件下就可以直接显示并打开，下图是一个例子：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://i.loli.net/2019/05/13/5cd965adeb6f377829.png",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("当然，我们也可以通过 "),e("code",[this._v("/mnt/C/USers/..")]),this._v(" 来访问 Windows 用户文件夹下的内容，如下图例子：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://i.loli.net/2019/05/13/5cd965aeaf68710972.png",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://i.loli.net/2019/05/13/5cd965adcbe5b68941.png",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),e("p",[this._v("这里似乎有一些 bug，我使用的 VS Code Insiders 版本在 WSL 环境下，即使我设置了默认 Shell 为 "),e("code",[this._v("zsh")]),this._v("，其默认打开的 Shell 依旧是 "),e("code",[this._v("bash")]),this._v("。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("在 WSL 环境下的 VS Code 打开的终端默认就是 "),e("code",[this._v("bash")]),this._v("，也就是 WSL 的终端环境。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"danger custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),e("p",[this._v("这些问题在 2019 年 5 月，VS Code 官方团队实现了 Remote-WSL 插件之后基本不复存在了。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("TIP")]),this._v(" "),e("p",[this._v("VS Code 配色方案因人而异，大家都有自己不同的喜好，这里仅仅留作参考。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://i.loli.net/2019/01/01/5c2aecf7acc1d.png",alt:""}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.fontFamily"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"'Operator Mono', 'Iosevka', 'Sarasa Mono T SC', monospace\"")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"workbench.colorTheme"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Cobalt2"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("图标方案：")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"workbench.iconTheme"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"material-icon-theme"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])}],!1,null,null,null);a.options.__file="README.md";e.default=a.exports}}]);